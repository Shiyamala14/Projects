/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jenshiha;

import com.toedter.calendar.JDateChooser;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;




public class Add_Flight_Details extends javax.swing.JFrame {
    
    /**
     * Creates new form Add_Flight_Details
     */
   public Flight() {
        initComponents();

    }
       public void Random(){
        Random rd=new Random();
        fid.setText(""+rd.nextInt(1000+1));
        
       }
        public void fetch(){
        try{
            String sql="select * from add_flight ";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            //jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            System.out.println(e);
           // JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    private void initializeUI() {
        loadDataToTable();
        setUpTableMouseListener();
    }
    private void loadDataToTable() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
        String query = "SELECT * FROM add_flight";
        PreparedStatement ps = con.prepareStatement(query);
        ResultSet rs = ps.executeQuery();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows

        while (rs.next()) {
            model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getInt(8),rs.getString(9)});
        }

        rs.close();
        ps.close();
        con.close();
    } 
    
    catch (Exception ex) {
       // System.out.println(ex);
        Logger.getLogger(Add_Flight_Details.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    public void clearFields(){
        fid.setText(null);
        jTextField1.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
        JDateChooser jDateChooser11 = Date;
        jTextField6.setText(null);
        jTextField7.setText(null);
        jTextField8.setText(null);
        jTextField9.setText(null);
     }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Flight_Id = new javax.swing.JLabel();
        Flight_Name = new javax.swing.JLabel();
        Source = new javax.swing.JLabel();
        DateLAble = new javax.swing.JLabel();
        Destination = new javax.swing.JLabel();
        Arrival_time = new javax.swing.JLabel();
        Depart_time = new javax.swing.JLabel();
        Flight_price = new javax.swing.JLabel();
        fid = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Delate = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        Home = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Total_seats = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        Date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        jLabel1.setText("Add Flight Details");

        Flight_Id.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Flight_Id.setText("Flight Id");

        Flight_Name.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Flight_Name.setText("Flight Name");

        Source.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Source.setText("Source");

        DateLAble.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        DateLAble.setText("Date");

        Destination.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Destination.setText("Destination");

        Arrival_time.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Arrival_time.setText("Arrival Time");

        Depart_time.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Depart_time.setText("Departure Time");

        Flight_price.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Flight_price.setText("Flight Price");

        Add.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delate.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Delate.setText("Delete");
        Delate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelateActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Home.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Home.setText("Home");
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });

        Exit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight_Id", "Flight_Name", "Source", "Destination", "Date", "Arrival_time", "Depart_time", "Flight_price", "Total_seats"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Total_seats.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        Total_seats.setText("Total Seats");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Depart_time, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(Arrival_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateLAble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Destination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Source, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Flight_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Flight_Id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Flight_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Total_seats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fid, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(67, 67, 67)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Delate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(409, 409, 409)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Flight_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fid, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Flight_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Source, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Destination, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(DateLAble, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Arrival_time, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Depart_time, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(Delate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(Flight_price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total_seats, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        // Get data from the selected row
        Object Flight_Id = jTable1.getValueAt(selectedRow, 0);
        Object Flight_Name = jTable1.getValueAt(selectedRow, 1);
        Object Source = jTable1.getValueAt(selectedRow, 2);
        Object Destination = jTable1.getValueAt(selectedRow, 3);
        Object Date= jTable1.getValueAt(selectedRow, 4);
        Object Arrival_time = jTable1.getValueAt(selectedRow, 5);
        Object Depart_time = jTable1.getValueAt(selectedRow, 6);
        Object Flight_price = jTable1.getValueAt(selectedRow, 7);
        

        // Set the data in your form fields
        fid.setText(Flight_Id.toString());
        jTextField1.setText(Flight_Name.toString());
        jTextField3.setText(Source.toString());
        jTextField4.setText(Destination.toString());
        DateLAble.setText(Date.toString());
        jTextField6.setText(Arrival_time.toString());
        jTextField7.setText(Depart_time.toString());
        jTextField8.setText(Flight_price.toString());
        jTextField8.setText(Flight_price.toString());
    }
    }
    private void setUpTableMouseListener() {
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    }//GEN-LAST:event_jTable1MouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        try
        {
            int Product_Id = Integer.parseInt(fid.getText());
            DateFormat da=new SimpleDateFormat("dd-MM-yyyy");
            String date=da.format(Date.getDate());
            String Flight_Name=jTextField1.getText();
            String Flight_Id = fid.getText();
            String Source = jTextField3.getText();
            String Destination =jTextField4.getText();
            String Date=date;
            String Arrival_time =jTextField6.getText();
            String Depart_time =jTextField7.getText();
            String Flight_price=jTextField8.getText();
            String Total_seats=jTextField9.getText();
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb","root","");
             String checkExistingQuery = "SELECT * FROM add_flight WHERE Flight_Id= ?";
            PreparedStatement checkExistingPS = con.prepareStatement(checkExistingQuery);
            checkExistingPS.setInt(1, Integer.parseInt(fid.getText()));
            ResultSet existingRS = checkExistingPS.executeQuery();
           

        if (existingRS.next()) {
            JOptionPane.showMessageDialog(this, "flight with ID " + fid.getText() + " already exists. Please enter a different ID.");
            clearFields();
            return;
            
        }
            String query="INSERT INTO add_flight(Flight_Id,Flight_Name,Source,Destination,Date,Arrival_time,Depart_time,Flight_price,Total_seats) values(?,?,?,?,?,?,?,?,?)";
            ps.setInt(8,Integer.parseInt(jTextField8.getText()));
            ps.setInt(1,Integer.parseInt(fid.getText()));
            ps.setString(3,jTextField3.getText());
            ps.setString(4,jTextField4.getText());
            ps.setString(5,Date);
            ps.setString(6,jTextField6.getText());
            ps.setString(7,jTextField7.getText());
            ps.setString(2,jTextField1.getText());
            ps.setString(9,jTextField9.getText());
            int i=ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "INSERT SUCCESSFULL");
            clearFields();
            ps.close();
            //con.close();
            loadDataToTable();
        }
    
        catch (Exception ex) {
            
            
            Logger.getLogger(Add_Flight_Details.class.getName()).log(Level.SEVERE, null, ex);
            if(" ".equals(fid.getText()) || "".equals(jTextField1.getText()) || "".equals(jTextField3.getText())
                    || "".equals(jTextField4.getText()) ||"".equals(Date.getDate().toString()) ||"".equals(jTextField6.getText())||"".equals(jTextField7.getText())||"".equals(jTextField8.getText())||"".equals(jTextField9.getText()))
            {
                JOptionPane.showMessageDialog(this,"PLEASE FILL THE DATA");
            }
        }
        
    
    
                                            

    }//GEN-LAST:event_AddActionPerformed

    private void DelateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelateActionPerformed
        // TO DO add your handling code here:
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
                String deleteQuery = "DELETE FROM add_flight WHERE Flight_Id=?";

                try (PreparedStatement deletePs = con.prepareStatement(deleteQuery)) {
                deletePs.setInt(1, Integer.parseInt(fid.getText()));
                int rowsDeleted = deletePs.executeUpdate();

                if (rowsDeleted > 0) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int selectedRow = jTable1.getSelectedRow();
            
                if (selectedRow != -1) {
                    model.removeRow(selectedRow);
                    JOptionPane.showMessageDialog(this, "Row deleted successfully");
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "No rows were deleted. Row with specified Id not found.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No rows were deleted. Row with specified Id not found.");
            }
        }
     con.close();
    } 
   catch (SQLException | ClassNotFoundException ex)
   {
       Logger.getLogger(Add_Flight_Details.class.getName()).log(Level.SEVERE, null, ex);
            if(" ".equals(fid.getText()) || "".equals(jTextField1.getText()) || "".equals(jTextField3.getText())
                    || "".equals(jTextField4.getText()) ||"".equals(Date.getDate()) ||"".equals(jTextField6.getText())||"".equals(jTextField7.getText())||"".equals(jTextField8.getText())||"".equals(jTextField9.getText()))
            {
                JOptionPane.showMessageDialog(this,"PLEASE FILL THE DATA");
            }
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error in deleting row: " + ex.getMessage());
    }        
    }//GEN-LAST:event_DelateActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
       // TODO add your handling code here:
       JFrame frame = new JFrame();
        if (JOptionPane.showConfirmDialog(frame, "confirm if you want to exit", "Hospital Management System",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

            System.exit(0);
        }
    }//GEN-LAST:event_ExitActionPerformed

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
        Home t = new Home();
        t.setVisible(true);
    }//GEN-LAST:event_HomeActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         String sql="select * from add_flight where Flight_Id=?";
        try{
             Connection con = javaconnect.ConnectDb();
             PreparedStatement pst = con.prepareStatement(sql);
             pst.setString(1, fid.getText());
             ResultSet rs = pst.executeQuery();
             if(rs.next()){
                 JOptionPane.showMessageDialog(null, "The Flght Id Is Found");
                 String add1=rs.getString("Flight_Name");
                 jTextField1.setText(add1);
                 String add2=rs.getString("Source");
                 jTextField3.setText(add2);
                 String add3=rs.getString("Destination");
                 jTextField4.setText(add3);
                 String Dob=rs.getString("Date");
                 java.util.Date date1 =   new SimpleDateFormat("yyyy-MM-dd").parse(Dob);
                 Date.setDate(date1); 
                
                 String add5=rs.getString("Arrival_time");
                 jTextField6.setText(add5);
                 String add6=rs.getString("Depart_time");
                 jTextField7.setText(add6);
                 String add7=rs.getString("Flight_price");
                 jTextField8.setText(add7);
                 String add8=rs.getString("Total_seats");
                 jTextField9.setText(add8);
                 
             }else{
                JOptionPane.showMessageDialog(null, "The Flight Id Is Not found");

            }
            
        }catch(Exception e){
            Logger.getLogger(Add_Flight_Details.class.getName()).log(Level.SEVERE, null, e);
            if(" ".equals(fid.getText()) || "".equals(jTextField1.getText()) || "".equals(jTextField3.getText())
                    || "".equals(jTextField4.getText()) ||"".equals(Date.getDate()) ||"".equals(jTextField6.getText())||"".equals(jTextField7.getText())||"".equals(jTextField8.getText())||"".equals(jTextField9.getText()))
            {
                JOptionPane.showMessageDialog(this,"PLEASE FILL THE DATA");
            }
 
        }
    }//GEN-LAST:event_SearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Flight_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Flight_Details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JLabel Arrival_time;
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.JLabel DateLAble;
    private javax.swing.JButton Delate;
    private javax.swing.JLabel Depart_time;
    private javax.swing.JLabel Destination;
    private javax.swing.JButton Exit;
    private javax.swing.JLabel Flight_Id;
    private javax.swing.JLabel Flight_Name;
    private javax.swing.JLabel Flight_price;
    private javax.swing.JButton Home;
    private javax.swing.JButton Search;
    private javax.swing.JLabel Source;
    private javax.swing.JLabel Total_seats;
    private javax.swing.JTextField fid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
